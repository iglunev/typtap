(function(){'use strict';
function l(c) {
  var a = 0;
  return function() {
    return a < c.length ? {done:!1, value:c[a++]} : {done:!0};
  };
}
function m(c) {
  var a = "undefined" != typeof Symbol && Symbol.iterator && c[Symbol.iterator];
  return a ? a.call(c) : {next:l(c)};
}
var p = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this, q = "function" == typeof Object.defineProperties ? Object.defineProperty : function(c, a, d) {
  c != Array.prototype && c != Object.prototype && (c[a] = d.value);
};
function r(c) {
  if (c) {
    for (var a = p, d = ["Promise"], g = 0; g < d.length - 1; g++) {
      var k = d[g];
      k in a || (a[k] = {});
      a = a[k];
    }
    d = d[d.length - 1];
    g = a[d];
    c = c(g);
    c != g && null != c && q(a, d, {configurable:!0, writable:!0, value:c});
  }
}
r(function(c) {
  function a(b) {
    this.b = 0;
    this.g = void 0;
    this.a = [];
    var a = this.c();
    try {
      b(a.resolve, a.reject);
    } catch (e) {
      a.reject(e);
    }
  }
  function d() {
    this.a = null;
  }
  function g(b) {
    return b instanceof a ? b : new a(function(a) {
      a(b);
    });
  }
  if (c) {
    return c;
  }
  d.prototype.b = function(b) {
    null == this.a && (this.a = [], this.f());
    this.a.push(b);
  };
  d.prototype.f = function() {
    var b = this;
    this.c(function() {
      b.i();
    });
  };
  var k = p.setTimeout;
  d.prototype.c = function(b) {
    k(b, 0);
  };
  d.prototype.i = function() {
    for (; this.a && this.a.length;) {
      var b = this.a;
      this.a = [];
      for (var a = 0; a < b.length; ++a) {
        var e = b[a];
        b[a] = null;
        try {
          e();
        } catch (h) {
          this.g(h);
        }
      }
    }
    this.a = null;
  };
  d.prototype.g = function(b) {
    this.c(function() {
      throw b;
    });
  };
  a.prototype.c = function() {
    function b(b) {
      return function(f) {
        e || (e = !0, b.call(a, f));
      };
    }
    var a = this, e = !1;
    return {resolve:b(this.o), reject:b(this.f)};
  };
  a.prototype.o = function(b) {
    if (b === this) {
      this.f(new TypeError("A Promise cannot resolve to itself"));
    } else {
      if (b instanceof a) {
        this.s(b);
      } else {
        a: {
          switch(typeof b) {
            case "object":
              var f = null != b;
              break a;
            case "function":
              f = !0;
              break a;
            default:
              f = !1;
          }
        }
        f ? this.m(b) : this.i(b);
      }
    }
  };
  a.prototype.m = function(b) {
    var a = void 0;
    try {
      a = b.then;
    } catch (e) {
      this.f(e);
      return;
    }
    "function" == typeof a ? this.u(a, b) : this.i(b);
  };
  a.prototype.f = function(b) {
    this.j(2, b);
  };
  a.prototype.i = function(b) {
    this.j(1, b);
  };
  a.prototype.j = function(b, a) {
    if (0 != this.b) {
      throw Error("Cannot settle(" + b + ", " + a + "): Promise already settled in state" + this.b);
    }
    this.b = b;
    this.g = a;
    this.l();
  };
  a.prototype.l = function() {
    if (null != this.a) {
      for (var b = 0; b < this.a.length; ++b) {
        n.b(this.a[b]);
      }
      this.a = null;
    }
  };
  var n = new d;
  a.prototype.s = function(b) {
    var a = this.c();
    b.h(a.resolve, a.reject);
  };
  a.prototype.u = function(a, c) {
    var b = this.c();
    try {
      a.call(c, b.resolve, b.reject);
    } catch (h) {
      b.reject(h);
    }
  };
  a.prototype.then = function(b, c) {
    function e(a, b) {
      return "function" == typeof a ? function(b) {
        try {
          h(a(b));
        } catch (t) {
          d(t);
        }
      } : b;
    }
    var h, d, f = new a(function(a, b) {
      h = a;
      d = b;
    });
    this.h(e(b, h), e(c, d));
    return f;
  };
  a.prototype.catch = function(a) {
    return this.then(void 0, a);
  };
  a.prototype.h = function(a, c) {
    function b() {
      switch(d.b) {
        case 1:
          a(d.g);
          break;
        case 2:
          c(d.g);
          break;
        default:
          throw Error("Unexpected state: " + d.b);
      }
    }
    var d = this;
    null == this.a ? n.b(b) : this.a.push(b);
  };
  a.resolve = g;
  a.reject = function(b) {
    return new a(function(a, c) {
      c(b);
    });
  };
  a.race = function(b) {
    return new a(function(a, c) {
      for (var d = m(b), e = d.next(); !e.done; e = d.next()) {
        g(e.value).h(a, c);
      }
    });
  };
  a.all = function(b) {
    var c = m(b), d = c.next();
    return d.done ? g([]) : new a(function(a, b) {
      function e(b) {
        return function(c) {
          f[b] = c;
          h--;
          0 == h && a(f);
        };
      }
      var f = [], h = 0;
      do {
        f.push(void 0), h++, g(d.value).h(e(f.length - 1), b), d = c.next();
      } while (!d.done);
    });
  };
  return a;
});
}).call(this);
